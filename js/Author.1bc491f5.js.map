{"version":3,"sources":["webpack:///./src/views/Author.vue","webpack:///./src/views/Author.vue?7725"],"names":["class","title","authorName","content","value","data","lazyParams","loading","totalRecords","onPage","$event","onSort","selectedTrendField","options","trendFields","optionLabel","optionValue","placeholder","loadTrendingProgress","renderTrendingChart","height","dateFormat","rawData","trendOverTimeData","type","isNaN","tweetCount","localeNumber","pubCount","totalFollowers","scoreSum","Math","round","sentiment","containsAbstract","tweetAuthorCount","profileData","renderMap","countryData","countries","renderCloud","ref","words","id_in","$route","params","id","mode","selectedPubField","pubFields","loadPubsProgress","renderPublicationChart","pubsOverTimeData","name","components","PublicationChart","MapChart","AmbaTweet","WordCloud","TimeTooltip","TrendingPublicationsTable","beforeRouteUpdate","to","from","query","time","undefined","this","duration","fetchData","searchWord","questions","exclamations","label","created","mounted","first","rows","sortField","sortOrder","methods","AuthorService","progressValue","then","response","results","catch","e","console","log","progressTrending","search","event","x","toLocaleString","get","author","PublicationService","trendingAuthor","forEach","element","score","length_avg","projected_change","mean_age","mean_length","ema","kama","mean_score","stddev","contains_abstract_avg","total_count","pub_date","d","Date","toLocaleDateString","year","numbers","top","word","obj","text","count","push","c","location","toUpperCase","StatService","render"],"mappings":"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","file":"js/Author.1bc491f5.js","sourcesContent":["<template>\n    <div class=\"p-grid\">\n\n        <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-12\">\n            <Card class=\"table-card\">\n                <template #title>\n                    Trending {{ authorName }}\n                </template>\n                <template #content>\n                    <TrendingPublicationsTable :value=\"data\" :lazyParams=\"lazyParams\" :loading=\"loading\" :totalRecords=\"totalRecords\"\n                                           @page=\"onPage($event)\" @sort=\"onSort($event)\">\n                    </TrendingPublicationsTable>\n                </template>\n            </Card>\n        </div>\n\n        <div class=\"p-col-12 p-md-12 p-lg-6 p-xl-6\">\n            <Card class=\"big-chart\">\n                <template #title>\n                    <time-tooltip/>Trending over Time by Ambalytics Trends\n                </template>\n                <template #content>\n                    <Dropdown v-model=\"selectedTrendField\" :options=\"trendFields\" optionLabel=\"label\"\n                              optionValue=\"value\" placeholder=\"Select a Field\" @change=\"loadTrendingProgress\"/>\n                    <br>\n                    <publication-chart v-if=\"renderTrendingChart\" :height=\"500\" title=\" \" :dateFormat=\"true\"\n                                       :rawData=\"trendOverTimeData\"\n                                       type=\"line\"></publication-chart>\n                    <div v-else class=\"no-data\">\n                        - no data available -\n                    </div>\n                </template>\n            </Card>\n        </div>\n\n        <div class=\"p-col-12 p-md-6 p-lg-6 p-xl-3\">\n            <Card class=\"stats\">\n                <template #title>\n                    Stats\n                </template>\n                <template #content>\n                    <div class=\"padding-left\" v-if=\"!isNaN(tweetCount)\">\n                        <h3>\n                            <time-tooltip/>\n                            Tweet Count\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(tweetCount) }}</p>\n                    </div>\n                    <div class=\"padding-left\" v-if=\"!isNaN(pubCount)\">\n                        <h3>\n                            <time-tooltip/>\n                            Publication Count\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(pubCount)}}</p>\n                    </div>\n                    <div class=\"padding-left\" v-if=\"!isNaN(totalFollowers)\">\n                        <h3>\n                            <time-tooltip/>\n                            Total Followers Reached\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(totalFollowers) }}</p>\n                    </div>\n                    <!-- total score, average score -->\n                    <div class=\"padding-left\" v-if=\"!isNaN(scoreSum)\">\n                        <h3>\n                            <time-tooltip/>\n                            Average Score per Tweet\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(Math.round(scoreSum / tweetCount * 100) / 100) }}</p>\n                    </div>\n                    <div class=\"padding-left\" v-if=\"!isNaN(sentiment)\">\n                        <h3>\n                            <time-tooltip/>\n                            Average Sentiment\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(Math.round(sentiment * 100) / 100) }}</p>\n                    </div>\n                    <div class=\"padding-left\" v-if=\"!isNaN(containsAbstract)\">\n                        <h3>\n                            <time-tooltip/>\n                            Average Contains Abstract\n                        </h3>\n                        <p class=\"padding-left\">{{ localeNumber(Math.round(containsAbstract * 10000) / 100) }}%</p>\n                    </div>\n                    <div class=\"padding-left\" v-if=\"!isNaN(tweetAuthorCount)\">\n                        <h3>Tweet Author Count</h3>\n                        <p class=\"padding-left\">{{ localeNumber(tweetAuthorCount) }}</p>\n                    </div>\n                </template>\n            </Card>\n        </div>\n\n        <div class=\"p-col-12 p-md-6 p-lg-6 p-xl-3\">\n            <Card>\n                <template #title>\n                    Profile\n                </template>\n                <template #content>\n                    <publication-chart title=\" \" :rawData=\"profileData\" :height=\"500\"\n                                       type=\"radar\"></publication-chart>\n                </template>\n            </Card>\n        </div>\n\n         <div class=\"p-col-12 p-md-12 p-lg-6 p-xl-6\">\n            <Card>\n                <template #title>\n                    Tweet Author Locations\n                </template>\n                <template #content>\n                    <MapChart v-if=\"renderMap\" :countryData=\"countries\"/>\n                    <div v-else class=\"no-data\">\n                        - no data available -\n                    </div>\n                </template>\n            </Card>\n        </div>\n\n\n        <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-6 word-wrapper\">\n            <Card>\n                <template #title>\n                    Tweet Content Word Cloud\n                </template>\n                <template #content>\n                    <word-cloud ref=\"worldCloud\" v-if=\"renderCloud\" :data=\"words\"></word-cloud>\n                    <div v-else class=\"no-data\">\n                        - no data available -\n                    </div>\n                </template>\n            </Card>\n        </div>\n\n        <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-6\">\n            <Card>\n                <template #title>\n                    Newest Tweet\n                </template>\n                <template #content>\n                    <AmbaTweet :id_in=\"$route.params.id\" mode=\"author\">\n                    </AmbaTweet>\n                </template>\n            </Card>\n        </div>\n\n        <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-6\">\n            <Card class=\"big-chart\">\n                <template #title>\n                    Publications over Time by Twitter Activity\n                </template>\n                <template #content>\n                    <Dropdown v-model=\"selectedPubField\" :options=\"pubFields\" optionLabel=\"label\"\n                              optionValue=\"value\" placeholder=\"Select a Field\" @change=\"loadPubsProgress\"/>\n                    <br>\n                    <publication-chart v-if=\"renderPublicationChart\" :height=\"700\" title=\" \" :dateFormat=\"true\"\n                                       :rawData=\"pubsOverTimeData\"\n                                       type=\"line\"></publication-chart>\n                    <div v-else class=\"no-data\">\n                        - no data available -\n                    </div>\n                </template>\n            </Card>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import PublicationService from \"../services/PublicationService\";\n    import AuthorService from \"../services/AuthorService\";\n    import PublicationChart from \"../components/PublicationChart\";\n    import MapChart from \"../components/MapChart\";\n    import AmbaTweet from \"../components/AmbaTweet\";\n    import WordCloud from \"../components/WordCloud\";\n    import StatService from \"../services/StatService\";\n    import TimeTooltip from \"../components/TimeTooltip\";\n    import TrendingPublicationsTable from \"../components/TrendingPublicationsTable\";\n\n    export default {\n        name: 'Publications',\n        components: {PublicationChart, MapChart, AmbaTweet, WordCloud, TimeTooltip, TrendingPublicationsTable},\n        beforeRouteUpdate(to, from) {\n            if (to.query.time !== from.query.time) {\n                if (to.query.time !== undefined) {\n                    this.duration = to.query.time;\n                    this.fetchData();\n                } else {\n                    this.duration = 'currently';\n                    this.fetchData();\n                }\n            }\n        },\n        data() {\n            return {\n                duration: \"currently\",\n                authorName: '',\n                lazyParams: {},\n                data: [],\n                loading: true,\n                searchWord: '',\n                totalRecords: 0,\n                countries: [],\n                words: [],\n                renderMap: false,\n                renderCloud: false,\n                renderTrendingChart: true,\n                renderPublicationChart: true,\n                pubCount: '-',\n                tweetCount: '-',\n                scoreSum: '-',\n                totalFollowers: '-',\n                sentiment: '-',\n                containsAbstract: '-',\n                questions: '-',\n                exclamations: '-',\n                tweetAuthorCount: '-',\n                trendOverTimeData: [],\n                selectedTrendField: 'score',\n                trendFields: [\n                    {label: 'Score', value: 'score'},\n                    {label: 'Count', value: 'count'},\n                    {label: 'Sentiment', value: 'mean_sentiment'},\n                    {label: 'Followers', value: 'sum_follower'},\n                    {label: 'Contains Abstract', value: 'abstract_difference'},\n                    {label: 'Mean Age', value: 'mean_age'},\n                    {label: 'Length', value: 'mean_length'},\n                    {label: 'Questions', value: 'mean_questions'},\n                    {label: 'Exclamations', value: 'mean_exclamations'},\n                    {label: 'Bot Rating', value: 'mean_bot_rating'},\n                    {label: 'Projected Change', value: 'projected_change'},\n                    {label: 'Trending Value', value: 'trending'},\n                    {label: 'ema', value: 'ema'},\n                    {label: 'kama', value: 'kama'},\n                    {label: 'ker', value: 'ker'},\n                    {label: 'Mean Score', value: 'mean_score'},\n                    {label: 'stddev', value: 'stddev'},\n                ],\n                pubsOverTimeData: [],\n                selectedPubField: 'score',\n                pubFields: [\n                    {label: 'Bot Rating', value: 'bot_rating'},\n                    {label: 'Contains Abstract', value: 'contains_abstract_raw'},\n                    {label: 'Exclamations', value: 'exclamations'},\n                    {label: 'Followers', value: 'followers'},\n                    {label: 'Length', value: 'length'},\n                    {label: 'Questions', value: 'questions'},\n                    {label: 'Score', value: 'score'},\n                    {label: 'Sentiment', value: 'sentiment_raw'},\n                    {label: 'Count', value: 'count'},\n                ],\n                profileData: []\n            }\n        },\n        created() {\n            if (this.$route.query.time !== undefined) {\n                this.duration = this.$route.query.time;\n            }\n            this.fetchData();\n        },\n        mounted() {\n            this.lazyParams = {\n                first: 0,\n                rows: 5,\n                sortField: 'score',\n                sortOrder: -1,\n            };\n        },\n        methods: {\n            loadPubsProgress() {\n                AuthorService.progressValue(this.selectedPubField, 5, this.duration, this.$route.params.id)\n                    .then(response => {\n                        this.pubsOverTimeData = response.data.results;\n                        this.renderPublicationChart = true;\n                    })\n                    .catch(e => {\n                        this.renderPublicationChart = false;\n                        this.pubsOverTimeData = [];\n                        console.log(e);\n                    });\n            },\n            loadTrendingProgress() {\n                AuthorService.progressTrending(this.selectedTrendField, 5, this.duration, this.$route.params.id)\n                    .then(response => {\n                        this.trendOverTimeData = response.data.results;\n                        this.renderTrendingChart = true;\n                        console.log(this.trendOverTimeData);\n                    })\n                    .catch(e => {\n                        this.renderTrendingChart = false;\n                        this.trendOverTimeData = [];\n                        console.log(e);\n                    });\n            },\n            search(event) {\n                this.searchWord = event;\n                this.fetchData();\n            },\n            onPage(event) {\n                this.lazyParams = event;\n                this.fetchData();\n            },\n            onSort(event) {\n                this.lazyParams = event;\n                this.fetchData();\n            },\n            localeNumber: function (x) {\n                if (isNaN(x)) return '-';\n                return x.toLocaleString(); // 'de-De'\n            },\n            fetchData() {\n                this.loading = true;\n\n                AuthorService.get(this.$route.params.id)\n                    .then(response => {\n                        this.authorName = response.data.results.author.name\n                    })\n                    .catch(e => {\n                        this.authorName = '';\n                        console.log(e);\n                    });\n\n                PublicationService.trendingAuthor(this.duration, this.$route.params.id, this.lazyParams.first, this.lazyParams.rows, this.lazyParams.sortField, this.lazyParams.sortOrder > 0 ? 'asc' : 'desc', this.searchWord)\n                    .then(response => {\n                        this.data = response.data.results;\n                        this.data.forEach(element => {\n                               element.score = Math.round(element.score);\n                            element.length_avg = Math.round(element.length_avg);\n                            element.projected_change = Math.round(element.projected_change);\n                            element.mean_age = Math.round(element.mean_age / 3600 * 10) / 10;\n                            element.mean_length = Math.round(element.mean_length);\n                            element.ema = Math.round(element.ema);\n                            element.kama = Math.round(element.kama);\n                            element.mean_score = Math.round(element.mean_score);\n                            element.stddev = Math.round(element.stddev);\n                            element.contains_abstract_avg = Math.round(element.contains_abstract_avg * 100) / 100;\n                            this.totalRecords = element.total_count ? element.total_count : 0;\n                            if (!element.pub_date) {\n                                element.pub_date = element.year;\n                            } else {\n                                let d = new Date(element.pub_date);\n                                element.pub_date = d.toLocaleDateString();\n                            }\n                        });\n                        this.loading = false\n                    })\n                    .catch(e => {\n                        this.data = [];\n                        this.loading = false;\n                        console.log(e);\n                    });\n\n                this.loadPubsProgress();\n                this.loadTrendingProgress();\n\n                AuthorService.numbers(this.duration, null, this.$route.params.id)\n                    .then(response => {\n                        this.tweetCount = response.data.results['count'];\n                        this.totalFollowers = response.data.results['followers'];\n                        this.scoreSum = response.data.results['score'];\n                        this.containsAbstract = response.data.results['contains_abstract_raw'];\n                        this.sentiment = response.data.results['sentiment_raw'];\n                        this.pubCount = response.data.results['pub_count'];\n                        this.questions = response.data.results['questions'];\n                        this.exclamations = response.data.results['exclamations'];\n                    })\n                    .catch(e => {\n                        console.log(e);\n                        this.tweetCount = '-';\n                        this.totalFollowers = '-';\n                        this.scoreSum = '-';\n                        this.containsAbstract = '-';\n                        this.sentiment = '-';\n                        this.pubCount = '-';\n                        this.questions = '-';\n                        this.exclamations = '-';\n                    });\n\n                AuthorService.profileData(this.$route.params.id, this.duration)\n                    .then(response => {\n                        this.profileData = [response.data.results];\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    });\n\n                AuthorService.top(null, this.$route.params.id)\n                    .then(response => {\n                        let words = [];\n                        response.data.results.word.forEach((e) => {\n                            let obj = {};\n                            obj.text = e.value;\n                            obj.value = e.count;\n                            words.push(obj)\n                        });\n                        this.words = words;\n                        this.renderCloud = true;\n                    })\n                    .catch(e => {\n                        this.renderCloud = false;\n                        console.log(e);\n                    });\n\n                AuthorService.top(['location'], this.$route.params.id, 1000)\n                    .then(response => {\n                        let c = {};\n                        response.data.results.location.forEach((e) => {\n                            c[e.value.toUpperCase()] = e.count\n                        });\n                        this.countries = c;\n                        this.renderMap = true;\n                    })\n                    .catch(e => {\n                        this.renderMap = false;\n                        console.log(e);\n                    });\n\n                StatService.tweetAuthorCount('author', null, this.$route.params.id)\n                    .then(response => {\n                        // console.log(response);\n                        this.tweetAuthorCount = response.data.results[0].count;\n                    })\n                    .catch(e => {\n                        this.tweetAuthorCount = '-';\n                        console.log(e);\n                    });\n            },\n        }\n    }\n</script>","import { render } from \"./Author.vue?vue&type=template&id=31f38790\"\nimport script from \"./Author.vue?vue&type=script&lang=js\"\nexport * from \"./Author.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}