{"version":3,"sources":["webpack:///./src/views/Publications.vue","webpack:///./src/views/Publications.vue?66ea"],"names":["class","title","content","selectedTrendField","options","trendFields","optionLabel","optionValue","placeholder","loadTrendingProgress","height","dateFormat","rawData","trendOverTimeData","type","value","data","lazyParams","loading","totalRecords","onPage","$event","onSearch","name","components","PublicationChart","TimeTooltip","TrendingPublicationsTable","beforeRouteUpdate","to","from","query","time","undefined","this","duration","fetchData","searchWord","label","dois","created","document","$route","mounted","first","rows","sortField","sortOrder","timer","setInterval","methods","event","word","StatService","progressTrending","then","response","results","catch","e","console","log","error","post","PublicationService","trending","forEach","element","push","doi","score","Math","round","length_avg","projected_change","mean_age","mean_length","ema","kama","mean_score","stddev","contains_abstract_avg","total_count","pub_date","d","Date","toLocaleDateString","year","beforeUnmount","clearInterval","render"],"mappings":"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","file":"js/Publications.9d756384.js","sourcesContent":["<template>\n    <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-12\">\n        <Card class=\"table-card big-chart\">\n            <template #title>\n                <time-tooltip/>\n                Trending Publications by Ambalytics Trends\n            </template>\n            <template #content>\n                <Dropdown v-model=\"selectedTrendField\" :options=\"trendFields\" optionLabel=\"label\"\n                          optionValue=\"value\" placeholder=\"Select a Field\" @change=\"loadTrendingProgress\"/>\n                <br>\n                <publication-chart :height=\"600\" title=\" \" :dateFormat=\"true\" :rawData=\"trendOverTimeData\"\n                                   type=\"line\"></publication-chart>\n            </template>\n        </Card>\n    </div>\n    <div class=\"p-col-12 p-md-12 p-lg-12 p-xl-12\">\n        <Card class=\"table-card\">\n            <template #title>\n                <time-tooltip/>\n                Trending Publications\n            </template>\n            <template #content>\n                <TrendingPublicationsTable :value=\"data\" :lazyParams=\"lazyParams\" :loading=\"loading\" :totalRecords=\"totalRecords\"\n                                           @page=\"onPage($event)\" @sort=\"onPage($event)\" @search=\"onSearch($event)\">\n                </TrendingPublicationsTable>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\n    // top publications\n    import PublicationService from \"../services/PublicationService\";\n    import TimeTooltip from \"../components/TimeTooltip\";\n    import PublicationChart from \"../components/PublicationChart\";\n    import StatService from \"../services/StatService\";\n    import TrendingPublicationsTable from \"../components/TrendingPublicationsTable\";\n\n    export default {\n        name: 'Publications',\n        components: {PublicationChart, TimeTooltip, TrendingPublicationsTable},\n        beforeRouteUpdate(to, from) {\n            if (to.query.time !== from.query.time) {\n                if (to.query.time !== undefined) {\n                    this.duration = to.query.time;\n                    this.fetchData();\n                } else {\n                    this.duration = 'currently';\n                    this.fetchData();\n                }\n            }\n        },\n        data() {\n            return {\n                duration: \"currently\",\n                trendOverTimeData: [],\n                lazyParams: {},\n                totalRecords: 0,\n                data: [],\n                loading: true,\n                searchWord: '',\n                selectedTrendField: 'score',\n                trendFields: [\n                    {label: 'Score', value: 'score'},\n                    {label: 'Count', value: 'count'},\n                    {label: 'Sentiment', value: 'mean_sentiment'},\n                    {label: 'Followers', value: 'sum_followers'},\n                    {label: 'Abstract Similarity', value: 'abstract_difference'},\n                    {label: 'Mean Age', value: 'mean_age'},\n                    {label: 'Length', value: 'mean_length'},\n                    {label: 'Questions', value: 'mean_questions'},\n                    {label: 'Exclamations', value: 'mean_exclamations'},\n                    {label: 'Bot Rating', value: 'mean_bot_rating'},\n                    {label: 'Projected Change', value: 'projected_change'},\n                    {label: 'Theilâ€“Sen estimator', value: 'trending'},\n                    {label: 'EMA', value: 'ema'},\n                    {label: 'KAMA', value: 'kama'},\n                    {label: 'KER', value: 'ker'},\n                    {label: 'Mean Score', value: 'mean_score'},\n                    {label: 'SD', value: 'stddev'},\n                ],\n                dois: []\n            }\n        },\n        created() {\n            document.title = \"Trending publications\";\n            if (this.$route.query.time !== undefined) {\n                this.duration = this.$route.query.time;\n            }\n            this.fetchData();\n        },\n        mounted() {\n            this.lazyParams = {\n                    first: 0,\n                    rows: 10,\n                    sortField: 'score',\n                    sortOrder: -1,\n                };\n            this.timer = setInterval(this.fetchData, 180000);\n        },\n        methods: {\n            onPage(event) {\n                this.lazyParams = event;\n                this.fetchData();\n            },\n            onSearch(word) {\n                this.searchWord = word;\n                this.fetchData();\n            },\n            loadTrendingProgress() {\n                StatService.progressTrending(this.selectedTrendField, this.lazyParams.rows, this.duration, this.dois)\n                    .then(response => {\n                        this.trendOverTimeData = response.data.results;\n                    })\n                    .catch(e => {\n                        this.trendOverTimeData = [];\n                        console.log(e);\n                    });\n            },\n            fetchData() {\n                this.error = this.post = null;\n                this.loading = true;\n                PublicationService.trending(this.duration, this.lazyParams.first, this.lazyParams.rows, this.lazyParams.sortField, this.lazyParams.sortOrder > 0 ? 'asc' : 'desc', this.searchWord)\n                    .then(response => {\n                        this.data = response.data.results;\n                        let dois = [];\n                        this.data.forEach(element => {\n                            dois.push(element.doi);\n                            element.score = Math.round(element.score);\n                            element.length_avg = Math.round(element.length_avg);\n                            element.projected_change = Math.round(element.projected_change);\n                            element.mean_age = Math.round(element.mean_age / 3600 * 10) / 10;\n                            element.mean_length = Math.round(element.mean_length);\n                            element.ema = Math.round(element.ema);\n                            element.kama = Math.round(element.kama);\n                            element.mean_score = Math.round(element.mean_score);\n                            element.stddev = Math.round(element.stddev);\n                            element.contains_abstract_avg = Math.round(element.contains_abstract_avg * 100) / 100;\n                            this.totalRecords = element.total_count ? element.total_count : 0;\n                            if (!element.pub_date) {\n                                element.pub_date = element.year;\n                            } else {\n                                let d = new Date(element.pub_date);\n                                element.pub_date = d.toLocaleDateString();\n                            }\n                        });\n                        this.dois = dois;\n                        this.loading = false;\n                        this.loadTrendingProgress();\n                    })\n                    .catch(e => {\n                        this.data = [];\n                        this.loading = false;\n                        console.log(e);\n                    });\n            },\n        },\n        beforeUnmount() {\n            clearInterval(this.timer);\n        }\n    }\n</script>","import { render } from \"./Publications.vue?vue&type=template&id=5660313a\"\nimport script from \"./Publications.vue?vue&type=script&lang=js\"\nexport * from \"./Publications.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}